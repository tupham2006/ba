<!DOCTYPE html>
	<style type="text/css">
		#book {
			height: 100%;
		}

		.book-data-main {
			padding: 10px;
			height: 300px;
			width: 100%;
			border-radius: 3px;
			cursor: pointer;
		}

		.book-data-main:hover {
			box-shadow: 3px 3px 10px 0px #CCC;
		}

		.book-data-image {
			height: 225px;
			line-height: 225px;
			width: 100%;	
		}

		.book-data-title {
			height: 30px;
			line-height: 30px;
			vertical-align: middle;
			color: rgb(65, 140, 252);
			text-align: center;
		}

		.book-data-rate {
			margin-top: 5px;
			width: 100%;
			height: 20px;
			line-height: 20px;
			text-align: center;
			vertical-align: middle;
		}

		.book-data-rate {
			cursor: pointer;
		}

		.book-data-rate .love:before {
			content: "\f08a"
		}

		.book-data-rate .love:hover:before {
			content: "\f004";
			color: red
		}

		.book-data-rate .loved:before {
			content: "\f004";
			color: red
		}

		.book-data-rate .hate:before {
			content: "\f088";
		}

		.book-data-rate .hate:hover:before {
			content: "\f165";
		}

		.book-data-rate .hated:before {
			content: "\f165";
		}

		.book-data-rate .comment:before {
			content: "\f27b";
		}

		.book-data-rate .comment:hover:before {
			content: "\f075";
			color: rgb(65, 140, 252);
		}

		.default-book {
			vertical-align: middle;
			text-align: center;
			width: 100%;	
			font-size: 100px;
			color: #CCC;
		}

		#modalBookHeader .book-avatar {
			width: 30%;
			height: 150px;
			float: left;
			padding: 5px;
		}

		#modalBookHeader .book-info {
			width: 70%;
			float: left;
			padding: 5px;
		}

		#modalBookHeader .book-info .name {
			font-size: 20px;

		}

		#modalBookBody {
			min-height: 300px;
			width: 100%;
		}

		#modalBookComment .cmt {
			margin-top: 10px;
			height: 300px;
			width: 100%;
			overflow-y: auto;
		}
		@media(max-width: 768px) { 
		}

		@media(max-width: 767px) {
			#filterAction {
				display: none;
			}

			#showFilter {
				text-align: right;
			}
		}

	</style>

	<div id="book" class="container-fluid">
		<div class="row height-100">
			<div id="sideBar" class="col-xs-12 col-md-3 pt-10 pb-10">
				<div class="row">
					<div class="col-xs-8 col-md-12 mb-20" style="font-size: 16px; color: rgb(65, 140, 252);">
						<i class="fa fa-sort-amount-desc" id="sortIcon" style="cursor: pointer;"></i> 
						<div class="display-inblock" role="button" data-toggle="collapse" href="#sort" aria-expanded="false" aria-controls="sort">Xếp theo: <span id="sortTitle">Sách mới</span> </div>
						<div class="collapse" id="sort" style="margin-left: 16px; font-size: 14px">
						  <a href="javascript:void(0)" value='id'>Sách mới </a> <br>
						  <a href="javascript:void(0)" value='name'>Tên sách </a> <br>
						  <a href="javascript:void(0)" value='hot'>Sách hot </a>
						</div>
					</div>
					<div class="col-xs-4 col-md-12 mb-20" id="showFilter" style="font-size: 16px; color: rgb(65, 140, 252);">
						<i class="fa fa-filter"></i> Lọc
					</div>
				</div>
				<div id="filterAction">
					<div class="row mb-20">
						<div class="col-xs-12 mb-10">
						Tìm kiếm sách
						</div>
						<div class="col-xs-12">
							<input type="text" class="form-control" id="filterSearch" placeholder="Nhập tên sách">
						</div>
					</div>
					<div class="row mb-20">
						<div class="col-xs-12 mb-10">
						Thể loại sách
						</div>
						<div class="col-xs-12">
							<select id="filterType" class="form-control">
								<option value="0" selected> Tất cả</option>
							</select>
						</div>
					</div>
					<div class="row mb-20">
						<div class="col-xs-12 mb-10">
							Trạng thái sách
						</div>
						<div class="col-xs-12">
							<select id="filterStatus" class="form-control">
								<option value="0" selected> Tất cả</option>
								<option value="1"> Chưa mượn</option>
								<option value="2"> Đã mượn</option>
							</select>
						</div>
					</div>
				</div>
			</div>
			<div class="col-xs-12 col-md-9 height-100 pt-10 pb-10 load-more" style="overflow: auto;">
				<div class="row" id="bookData"></div>
			</div>
		</div>
	</div>
	<!-- Modal -->
			<div class="modal fade" id="bookModal" tabindex="-1" role="dialog">
			  <div class="modal-dialog" role="document">
			    <div class="modal-content">
			    	<div class="modal-header" style="padding: 10px;">
			    		<button type="button" class="close" data-dismiss="modal">×</button>
			    	</div>
			      <div class="modal-body">
			      	<div id="modalBookHeader" class="mb-20">
				      	<div class="book-avatar" style="line-height: 150px; vertical-align: middle;">
				      		<i class="fa fa-file-image-o default-book"></i>
				      	</div>
				      	<div class="book-info">
				      		<div class="name"></div>	
				      		<div class="type">Thể loại: <span></span></div>	
				      		<div class="author">Tác giả: <span></div>	
				      		<div class="borrow_time">Lượt mượn: <span></span></div>	
				      	</div>
				      	<div class="clear"></div>
			      	</div>	
			      	 <!-- Tab panes -->
			      	  <ul class="nav nav-tabs mb-10" role="tablist">
    							<li role="presentation" class="width-50 active" id="clickToIntro"><a href="#modalBookIntro" aria-controls="modalBookIntro" role="tab" data-toggle="tab">Giới thiệu sách</a></li>
    							<li role="presentation" class="width-50" id="clickToComment">
    								<a href="#modalBookComment" aria-controls="modalBookComment" role="tab" data-toggle="tab">
    									<span class="count-comment"></span> Bình luận
    								</a>
    							</li>
    						</ul>
							  <div class="tab-content" id="modalBookBody">
							    <div role="tabpanel" class="tab-pane active" id='modalBookIntro'></div>
							    <div role="tabpanel" class="tab-pane" id="modalBookComment">
							    	<div class="cmt-box text-center mb-10">
							    		<div class="width-80 display-inblock pull-left">
							    			<textarea type="text" class="form-control" rows="1" id="modalBookCommentEnter" placeholder="Bạn nghĩ gì về cuốn sách này"></textarea>
							    		</div> 
							    		<div class="width-20 display-inblock">
							    			<button type="button" id="submitComment" class="btn btn-green">Gửi</button>
							    		</div>
							    	</div>
							    	<div class="cmt"></div>
							    </div>
							  </div>
			      </div>
			    </div>
			  </div>
			</div>
</html>

<script type="text/javascript">

	/* bookObject */
	// ListObj
	var bookList = [];

	// Update book list
	function updateBookList(data) {
		for(var i in bookList) {
			if(bookList[i].id == data.id) {
				bookList[i] = data;
			}
		}
	}

	// book info object
	var bookCount = 0;

	var bookInfo = {};
	// get info
	function getBookInfoById(id) {
		bookInfo = {};
		var i;
		for(i in bookList) {
			if(bookList[i].id == id){
				bookInfo = bookList[i];
			}
		}
	}
	
	var filter = {
		limit: 12,
		offset: 0,
		type: '',
		sort_name: 'id',
		sort_type: 'desc',
		search: '',
		status: 0
	};

	$(document).ready(function() {
		/************************
						PAGE
		************************/
		Request("/public/bookPage")
			.then(function(response){
				bookList = response.books;
				bookCount = response.book_count;
				totalItem = bookList.length;

				for(var j in response.book_types) {
					$("#filterType").append(
						'<option value="' + response.book_types[j].id + '">' + response.book_types[j].name + '</option>'
					);
				}	
				finishLoadingPage();
				renderBookTemplate();
			});

		/****************************
							SIDE BAR
		****************************/
		$("#showFilter").click(function(){
			$("#filterAction").toggle();
		});

		$(".load-more").scroll(function() {
			if($(".load-more").scrollTop() + $(".load-more").height() ==  $("#bookData").height()) {
				filter.offset += 12;
				if(filter.offset >= bookCount) return;
				getBookList("LOAD_MORE");
			}
		});

		/**
			Sort
		*/
		// sort name
		$('#sort a').click(function(e){
			filter.sort_name = $(this).attr('value');
			filter.limit = bookList.length;
			filter.offset = 0;

			$('#sortTitle').html($(this).html());
			$("#sort").collapse('hide');

			getBookList();
		});

			// sort type
		$("#sortIcon").click(function(e){
			filter.limit = bookList.length;
			filter.offset = 0;
			if($("#sortIcon").hasClass("fa-sort-amount-desc")){
				$("#sortIcon").removeClass("fa-sort-amount-desc");
				$("#sortIcon").addClass("fa-sort-amount-asc");
				filter.sort_type = 'asc';
			} else {
				$("#sortIcon").addClass("fa-sort-amount-desc");
				$("#sortIcon").removeClass("fa-sort-amount-asc");
				filter.sort_type = 'desc';
			}

			getBookList();
		});

		// typing
		var timeoutSearch;
		$('#filterSearch').on("keyup", function(e){

			if(timeoutSearch) clearTimeout(timeoutSearch);
			timeoutSearch = setTimeout(function(){
				filter.search = $('#filterSearch').val();
				filter.limit = 12;
				filter.offset = 0;
				$(".load-more").scrollTop(0);
				getBookList();
			}, 500);
		});

		// filter type	
		$('#filterType').change(function(e){
			filter.type = parseInt($('#filterType').val());
			filter.limit = 12;
			filter.offset = 0;
			$(".load-more").scrollTop(0);
			getBookList();
		});

		// filter status	
		$('#filterStatus').change(function(e){
			filter.limit = 12;
			filter.offset = 0;
			filter.status = parseInt($('#filterStatus').val());
			$(".load-more").scrollTop(0);
			getBookList();
		});

		/*****************************
									MAIN
		******************************/
		
		function renderBookTemplate(action) {
			
			$("#bookData").empty();

			for(var i in bookList) {
				$("#bookData").append(
					'<div class="col-md-3 mb-10" style="border-bottom: 1px dashed #ccc">' +
						'<div class="book-data-main" book_id="' + bookList[i].id + '" title="' + bookList[i].name + (!bookList[i].current_quantity ? ' (Đã mượn)' : '') + '">' +
							'<div class="book-data-title text-overflow" style="' + (!bookList[i].current_quantity ? 'color: red;' : '') + '">' + 
							bookList[i].name + 
							'</div>' +
							'<div class="book-data-image" style="background: url(\'' + bookList[i].image + '\');  background-size: contain; background-repeat: no-repeat; background-position: center;">' +
							(!bookList[i].image ? '<i class="fa fa-file-image-o default-book"></i>' : '') + '</div>' + 
							'<div class="book-data-rate">' +
								'<div class="width-30 display-inblock" title="Yêu thích">' +
									'<i class="fa love ' + ((bookList[i].is_rating == 1) ? "loved" : '') + '" value="1" book_id=' + bookList[i].id + '></i> ' +
									bookList[i].love_time +
								'</div>' +
								'<div class="width-30 display-inblock" title="Ghét">' +
									'<i class="fa fa-thumbs-o-down hate ' + ((bookList[i].is_rating == 0) ? "hated" : '') + '" value="0" book_id=' + bookList[i].id + '></i> ' +
									bookList[i].hate_time +
								'</div>' +
								'<div class="width-40 display-inblock" title="Bình luận">' +
									'<i class="fa fa-commenting-o comment" book_id=' + bookList[i].id + '></i> ' +
									bookList[i].comment_time +
								'</div>' +
							'</div>' +
						'<div>' + 
					'</div>'
				);
			}
		}

		// Get book list
		function getBookList(action) {
			if(isSending) return;
			blockUI(true);
			
			var data = filter;
			Request('/public/getBookList', data)
				.then(function(response){
					bookCount = response.book_count;
					if(action == "LOAD_MORE") {
						bookList = bookList.concat(response.books);
					} else {
						bookList = response.books;
					}
					renderBookTemplate(action);
					blockUI();

				})
				.catch(function(){
					blockUI();	
				});
		}

		// when love or hate
		$('#bookData').on('click', '.book-data-rate .love, .book-data-rate .hate', function(e){
			e.stopPropagation();

			var rateType = parseInt($(this).attr("value"));
			var bookId = parseInt($(this).attr("book_id"));
			
			if(!publicUser.public_token) {
				toastr.error("Vui lòng đăng nhập để tiếp tục!");
				return;
			}

			Request("/public/ratingBook", { rate_type: rateType, book_id: bookId })
				.then(function(res){
					if(res && res.book) {
						updateBookList(res.book);
						renderBookTemplate();
					}	
				})
				.catch(function(){});
		});

		/**************************
						MODAL
		***************************/
		function renderComment(comment_id) {
			var j, cmtContentHtml = [], comment_content;
			if(bookInfo.comment.length){

				for(j in bookInfo.comment) {
					comment_content = "";

					cmtContentHtml.push('<div class="mb-10" style="word-wrap: break-word;">');
					cmtContentHtml.push('<span class="text-green pr-10"><i class="fa fa-commenting-o"></i> ' + formatDate(bookInfo.comment[j].createdAt) + '</span>');
					if(publicUser) {
						if(bookInfo.comment[j].user_id == publicUser.id) {
							cmtContentHtml.push('<a href="javascript:void(0)" book-id="'+  bookInfo.comment[j].book_id + '"  comment-id="' + bookInfo.comment[j].id +'" class="delete-comment text-red pull-right mr-10"><i class="fa fa-trash"></i></a>');
						}
					}
					cmtContentHtml.push('<span class="text-bold text-green">' + bookInfo.comment[j].user_name + '</span> ');
					if(bookInfo.comment[j].content.length > 500 && bookInfo.comment[j].id != comment_id) {
						comment_content = bookInfo.comment[j].content.slice(0, 500);
					} else {
						comment_content = bookInfo.comment[j].content;
					}
					cmtContentHtml.push('<div class="content ml-10"><span >' + toHtmlEntities(comment_content) + '</span>');
					if(bookInfo.comment[j].content.length > 500 && bookInfo.comment[j].id != comment_id) {
						cmtContentHtml.push(' <a href="javascript:void(0)" class="more-content" comment-id="'+  bookInfo.comment[j].id + '">Xem thêm</a>');
					}
					cmtContentHtml.push('</div>');
					cmtContentHtml.push('</div>');
				}
			}

			$("#modalBookComment .cmt").html(cmtContentHtml.join(""));
		}

		$('#bookData').on("click", ".book-data-main" , function(event) {

			$("#clickToIntro").tab('show');
			$("#modalBookBody .active").removeClass('active');
			$("#modalBookIntro").addClass('active');

			var bookId = parseInt($(this).attr('book_id'));
			getBookInfoById(bookId);
			renderComment();

			// title left
			if(bookInfo.image) {
				$("#modalBookHeader .book-avatar").empty();
				$("#modalBookHeader .book-avatar").css({
					"background": "url(" + bookInfo.image + ")",
					"background-size": "contain",
					"background-repeat": "no-repeat",
					"background-position": "center"
				});
			}

			// title right
			// info
			$("#modalBookHeader .book-info .name").html(bookInfo.name);
			$("#modalBookHeader .book-info .type span").html(bookInfo.type_name);
			$("#modalBookHeader .book-info .author span").html(bookInfo.author);
			$("#modalBookHeader .book-info .borrow_time span").html(bookInfo.borrow_time);
			
			// rating
			if(!bookInfo.intro) {
				bookInfo.intro = "Nội dung đang được cập nhật!";
			}

			// comment
			if(publicUser.public_token) {
				$("#modalBookComment .cmt-box").show();
			} else {
				$("#modalBookComment .cmt-box").hide();
			}
			
			$("#modalBookIntro").html(bookInfo.intro);

			// show modal
			$("#bookModal").modal('show');
		});

		$(document).on('click', '.more-content', function(e){
			renderComment($(this).attr("comment-id"))
		});

		$("#submitComment").click(function(e){
			var content = $("#modalBookCommentEnter").val() || "";
			if(!content.trim()) return;
			blockUI(true);
			var params = {
				book_id: bookInfo.id,
				content: content
			};

			Request('/public/commentBook', params)
				.then(function(res){
					if(res && res.data) {
						for(var i in bookList) {
							if(bookList[i].id == res.data.book_id) {
								bookList[i].comment_time += 1;
								bookList[i].comment.unshift(res.data);
							}
						}
						renderComment();
						renderBookTemplate();
						$("#modalBookCommentEnter").val("");
						blockUI();
					}
				}).catch(function(e){
					blockUI();
				});
		});

		$(document).on("click", ".delete-comment", function(e){
			var commentId = parseInt($(this).attr("comment-id"));
			var bookId = parseInt($(this).attr("book-id"));
			if(!commentId || !bookId) return;
			var confirmBox = confirm("Bạn có muốn xóa bình luận này không?");
			if(confirmBox) {
				blockUI(true);
				Request('/public/deleteCommentBook', { id: commentId, book_id: bookId })
					.then(function(res){
						var i, j, index, newComment = [];

						for(i in bookList) {
							if(bookList[i].id == bookId) {
								index = i;
								bookList[i].comment_time -= 1;

								for(j in bookList[i].comment) {
									if(bookList[i].comment[j].id != commentId) {
										newComment.push(bookList[i].comment[j])
									}
								}
								break;
							}
						}

						bookList[index].comment = newComment;
						renderComment();
						renderBookTemplate();
						blockUI();
					}).catch(function(){
						blockUI();
					});
			}
		});
	});

</script>