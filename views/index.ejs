<!DOCTYPE html>
<html>
<head>
	<title>Trang chủ</title>
	<meta name="viewport" content="initial-scale=1,user-scalable=no,maximum-scale=1,height=device-height">
	<link rel="stylesheet" type="text/css" href="libs/bootstrap/css/bootstrap.css">
	<link rel="stylesheet" href="styles/font-awesome.css">
	<link rel="stylesheet" type="text/css" href="styles/const.css">
	<link rel="stylesheet" type="text/css" href="styles/theme.css">
	<link rel="stylesheet" type="text/css" href="publics/jquery.fullpage.min.css">
	<link rel="stylesheet" type="text/css" href="publics/toastr.css">
	<style type="text/css">
		html {
			height: 100%;
		}

		body {
			font-size: 14px;
			padding: 0;
			margin-top: 50px;
			height: calc(100% - 50px);
		}

		#header {
			height: 50px;
			line-height: 50px;
			width: 100%;
			background: none;
			color: #FFFFFF;
			border: none;
			border-radius: unset;
			position: fixed;
			top: 0;
			z-index: 1000;
		}


		#header .logo {
			background: url('../images/logo.png');
			background-size: cover;
			width: 40px;
			margin-top: 5px;
			height: 40px;	
			float: left;
			cursor: pointer;
		}

		#header .button {
			padding: 0 10px;
			min-width: 110px;
			text-align: center;
			opacity: 0.8
		}
		
		#header .active {
			font-weight: bold;
			font-size: 16px;
			transform: scale(1.0, 1.0);
			pointer-events: none;
			opacity: 1
		}

		#header .button:hover {
			opacity: 1
		}

		#header .button a {
			color: #FFFFFF;
			text-decoration: none;
			display: block;
		}

		#body {
			height: 100%;
		}

		#footer {

		}

		/*  Ripple */
		.ripple {
		  width: 0;
		  height: 0;
		  border-radius: 50%;
		  background: rgba(255, 255, 255, 0.6);
		  transform: scale(0);
		  position: absolute;
		  opacity: 1;
		  z-index: 1000
		}

		.rippleEffect {
		    animation: rippleDrop .5s linear;
		}

		@keyframes rippleDrop {
		  100% {
		    transform: scale(1);
		    opacity: 0;
		  }
		}

		@media(max-width: 767px) {
			#header {
				height: 50px;
				line-height: 50px;
				width: 100%;
				background: #4da1ff;
				color: #FFFFFF;
				border: none;
				border-radius: unset;
				position: fixed;
				top: 0;
				z-index: 1000;
			}

			#header .navbar-toggle {
				border-color: unset !important;
			}

			.navbar-inverse .navbar-toggle:hover, .navbar-inverse .navbar-toggle:focus {
				background: none;
			}

			.navbar-inverse .navbar-collapse, .navbar-inverse .navbar-form {
				border-color: #FFFFFF;
				background: #4da1ff;
			}
		}

	</style>
</head>
<body>
	<nav class="navbar navbar-inverse" id="header">
    <div class="container-fluid width-100">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
          <span class="sr-only">Toggle navigation</span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        <a class="logo" href="javascript:void(0)"></a>
      </div>
      <div id="navbar" class="collapse navbar-collapse m-0">
          <ul class="nav navbar-nav navbar-right">
            <li class="button active" id="buttonHome">
               <div><a href="/"> TRANG CHỦ </a></div>
            </li>
            <li class="button" id="buttonBook">
               <div><a href="/sach"> SÁCH </a></div>
            </li>
            <li class="button" style="display: none;" id="logout">
              <div><a href="javascript:void(0)"> 
               	ĐĂNG XUẤT
              </a></div>
            </li>
            <li class="button" style="display: none;" id="login">
              <div><a href="javascript:void(0)"> 
               	ĐĂNG NHẬP
              </a></div>
            </li>
            <li class="button" style="display: none;" id="register">
              <div><a href="javascript:void(0)"> 
               	ĐĂNG KÝ
              </a></div>
            </li>
            <!-- <li class="button">
               <div ui-sref="borrow"><a href="#"> THÀNH VIÊN </a></div>
            </li> -->
          </ul>
      </div><!--/.nav-collapse -->
    </div>
  </nav>
	<script type="text/javascript" src="/libs/jquery/jquery-3.2.1.js"></script>
	<script type="text/javascript" src="/libs/bootstrap/js/bootstrap.min.js"></script>
	<script type="text/javascript" src="publics/toastr.js"></script>
	<script type="text/javascript" src="publics/sdk.js"></script>
	<script type="text/javascript">
		var isSending;
		var pageUrl = window.location.href;
		var public_token;
		
		function checkLoginStatus() {
			public_token = getCookie('public_token');
			if(public_token) {
				$("#logout").show();
				$("#login").hide();
				$("#register").hide();
			} else {
				$("#logout").hide();
				$("#login").show();
				$("#register").show();
			}
		}
		checkLoginStatus();

		// facebook init
	  (function(d, s, id){
	    var js, fjs = d.getElementsByTagName(s)[0];
	    if (d.getElementById(id)) {return;}
	    js = d.createElement(s); js.id = id;
	    js.src = "publics/sdk.js";
	    fjs.parentNode.insertBefore(js, fjs);
	  }(document, 'script', 'facebook-jssdk'));

	  window.fbAsyncInit = function() {
		  FB.init({
		    appId            : '349916058748508',
		    autoLogAppEvents : true,
		    xfbml            : true,
		    version          : 'v2.12'
		  });
	  };

		$(document).ready(function() {

		  // direct page
		  if(location.pathname == "/") {
		    $("#header .button").removeClass("active");
		    $("#buttonHome").addClass("active");

		  } else if(location.pathname == "/sach"){
		    $("#header").css({
		      background: "rgb(65, 140, 252)"
		    });
		    $("#header .button").removeClass("active");
		    $("#buttonBook").addClass("active");
		  }

		  $(".button").click(function (e) {
		    
		    // Remove any old one
		    $(".ripple").remove();

		    // Setup
		    var posX = $(this).offset().left,
		        posY = $(this).offset().top,
		        buttonWidth = $(this).width(),
		        buttonHeight =  $(this).height();
		    
		    // Add the element
		    $(this).prepend("<span class='ripple'></span>");

		    
		   // Make it round!
		    if(buttonWidth >= buttonHeight) {
		      buttonHeight = buttonWidth;
		    } else {
		      buttonWidth = buttonHeight; 
		    }
		    
		    // Get the center of the element
		    var x = e.pageX - posX - buttonWidth / 2;
		    var y = e.pageY - posY - buttonHeight / 2;
		    
		   
		    // Add the ripples CSS and start the animation
		    $(".ripple").css({
		      width: buttonWidth,
		      height: buttonHeight,
		      top: y + 'px',
		      left: x + 'px'
		    }).addClass("rippleEffect");
		  });
		});

		var Request = function(url, data) {
			return new Promise(function(resolve, reject){

				if(isSending) return;
				blockPage(true);

				$.ajax({
				type: "post",
				url: url,
				data: data,
				headers: {
		      'authorization': 'Bearer ' + public_token
		    },
				success: function(response){
					blockPage();
					if(response && !response.error){
						return resolve(response);
					
					} else if(response.message) {
						toastr.error(response.message);
						return reject();
					
					} else {
						toastr.error("Lỗi máy chủ! vui lòng thử lại!");
					}
				}, 
				error: function(jqXHR, textStatus, errorThrown) {
					blockPage();
					var msg = '';
	        if (jqXHR.status === 0) {
	            msg = 'Mất kết nối. Vui lòng thử lại!';
	        } else if (jqXHR.status == 404) {
	            msg = 'Dữ liệu không tồn tại!';
	        } else if (jqXHR.status == 500) {
	            msg = 'Lỗi máy chủ. Vui lòng liên hệ với quản trị viên!';
	        } else if (exception === 'parsererror') {
	            msg = 'Lỗi xử lý dữ liệu!';
	        } else if (exception === 'timeout') {
	            msg = 'Hết thời gian yêu cầu!';
	        } else if (exception === 'abort') {
	            msg = 'Yêu cầu bị từ chối';
	        } else {
	            msg = 'Lỗi không xác định.';
	        }

	        toastr.error(msg);
	        return reject();
				}
			});
			});
		};

		function blockPage(block) {
			if(block) {
				$("html").addClass("block-loading");
				isSending = true;
			} else {
				$("html").removeClass("block-loading");
				isSending = false;
			}
		}

		// Auth
		function fbLogin() {
			return new Promise(function(resolve, reject){
				FB.login(function(response){
					console.log("response", response);
					if(response.status === "connected") {
						var accessToken = response.authResponse.accessToken;	  		
						return  resolve(accessToken);
					} else {
						return reject(response)
						toastr.error("Đăng nhập Facebook thất bại");
					}
				});
				
			})
		}

		$("#register").click(function(e){
			fbLogin()
				.then(function(accessToken){
					if(!accessToken) return;

					Request("/public/register", { access_token: accessToken })
						.then(function(res){
							if(res && !res.error) {
								setCookie(res);
								window.location.reload();
							} else {
								toastr.error(res.message);
							}
						})
				})
				.catch(function(err){
					console.log(err);
				})
		});

		$("#login").click(function(e){
			fbLogin()
				.then(function(accessToken){
					if(!accessToken) {
						toastr.error("Đăng nhập Facebook thất bại!");
						return;
					}

					Request("/public/login", { access_token: accessToken })
						.then(function(res){
							if(res && !res.error) {
								setCookie(res);
								window.location.reload();
							} else {
								toastr.error(res.message);
							}
						})
				})
				.catch(function(err){
					console.log(err);
				})
		})

		$("#logout").click(function(e){
			document.cookie = "public_token=";
		  document.cookie = "public_user=";
		  window.location.reload();
		})

		function setCookie(response) {
			var user = "";
			try{
				user = JSON.stringify(response.user);
			} catch(e){
				console.log(e);
			}
			var currentDate = new Date().getDate() + 10;
			var exp = new Date(new Date().setDate(currentDate));

			document.cookie = "public_token=" + response.token + "; expires = " + exp;
			document.cookie = "public_user=" + user + "; expires = " + exp;
		}

		function getCookie(cookieType){
		  var data = "";
		  if(document.cookie){
		    var cookie = document.cookie.split(';');
		    if(cookie && cookie.length > 0){
		      for(var i in cookie){
		        var childOfCookie = null;
		        childOfCookie = cookie[i].split('=');
		        if(childOfCookie && childOfCookie.length > 0 && childOfCookie[0] && childOfCookie[0].trim() == cookieType){
		          data = childOfCookie[1];
		        }
		      }
		    } 
		  }
		  return data;
		};

	</script>
	<div id="body">
		<%- body %>
	</div>
</body>
</html>