<!DOCTYPE html>
<html>
<head>
	<title>Trang chủ</title>
	<meta name="viewport" content="initial-scale=1,user-scalable=no,maximum-scale=1,height=device-height">
	<link rel="stylesheet" type="text/css" href="libs/bootstrap/css/bootstrap.css">
	<link rel="stylesheet" href="styles/font-awesome.css">
	<link rel="stylesheet" type="text/css" href="styles/const.css">
	<link rel="stylesheet" type="text/css" href="styles/theme.css">
	<link rel="stylesheet" type="text/css" href="publics/jquery.fullpage.min.css">
	<link rel="stylesheet" type="text/css" href="publics/toastr.css">
	<style type="text/css">
		html {
			height: 100%;
		}

		body {
			font-size: 14px;
			padding: 0;
			margin-top: 50px;
			height: calc(100% - 50px);
		}

		#header {
			height: 50px;
			line-height: 50px;
			width: 100%;
			background: none;
			color: #FFFFFF;
			border: none;
			border-radius: unset;
			position: fixed;
			top: 0;
			z-index: 1000;
		}


		#header .logo {
			background: url('../images/logo.png');
			background-size: cover;
			width: 40px;
			margin-top: 5px;
			height: 40px;	
			float: left;
			cursor: pointer;
		}

		#header .button {
			padding: 0 10px;
			min-width: 110px;
			text-align: center;
			opacity: 0.8
		}
		
		#header .active {
			font-weight: bold;
			font-size: 16px;
			transform: scale(1.0, 1.0);
			pointer-events: none;
			opacity: 1
		}

		#header .button:hover {
			opacity: 1
		}

		#header .button a {
			color: #FFFFFF;
			text-decoration: none;
			display: block;
		}

		#body {
			height: 100%;
		}

		#footer {

		}

		/*  Ripple */
		.ripple {
		  width: 0;
		  height: 0;
		  border-radius: 50%;
		  background: rgba(255, 255, 255, 0.6);
		  transform: scale(0);
		  position: absolute;
		  opacity: 1;
		  z-index: 1000
		}

		.rippleEffect {
		    animation: rippleDrop .5s linear;
		}

		.blockUI {
			display: none;
		}

		.block-main {
			width: 100%;
			height: 100%;
			top: 0;
			position: absolute;
			z-index: 9999;
		}

		.white-main {
			background: rgba(255, 255, 255);
			width: 100%;
			height: 100%;
			position: absolute;
			top: 0;
			left: 0;
			z-index: 1000;
		}

		.loading-logo {
			position: absolute;
	    top: 50%;
	    left: 50%;
	    width: 110px;
	    height: 110px;
	    background: url(../images/logo.png);
	    background-size: 110px;
	    margin-top: -95px;
	    z-index: 1001;
	    margin-left: -54px;
		}

		.page-loading {
			position: absolute;
			top: 50%;
			left: 50%;
	    border: 5px solid #f3f3f3; /* Light grey */
	    border-top: 5px solid #3498db; /* Blue */
	    border-radius: 50%;
	    width: 120px;
	    height: 120px;
	    animation: spin 5s linear infinite;
	    z-index: 1001;
	    margin-left: -60px;
	    margin-top: -100px;
		}

		@keyframes spin {
	    0% { transform: rotate(0deg); }
	    100% { transform: rotate(360deg); }
		}

		@keyframes rippleDrop {
		  100% {
		    transform: scale(1);
		    opacity: 0;
		  }
		}

		@media(max-width: 767px) {
			#header {
				height: 50px;
				line-height: 50px;
				width: 100%;
				background: #4da1ff;
				color: #FFFFFF;
				border: none;
				border-radius: unset;
				position: fixed;
				top: 0;
				z-index: 1000;
			}

			#header .logo {
				margin-left: 10px;
			}

			#header .navbar-toggle {
				border-color: unset !important;
			}

			.navbar-inverse .navbar-toggle:hover, .navbar-inverse .navbar-toggle:focus {
				background: none;
			}

			.navbar-inverse .navbar-collapse, .navbar-inverse .navbar-form {
				border-color: #FFFFFF;
				background: #4da1ff;
			}
		}

	</style>
</head>
<body>
	<nav class="navbar navbar-inverse" id="header">
    <div class="container-fluid width-100">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
          <span class="sr-only">Toggle navigation</span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        <a class="logo" href="javascript:void(0)"></a>
      </div>
      <div id="navbar" class="collapse navbar-collapse m-0">
          <ul class="nav navbar-nav navbar-right">
            <li class="button active" id="buttonHome">
               <div><a href="/"> TRANG CHỦ </a></div>
            </li>
            <li class="button" id="buttonBook">
               <div><a href="/sach"> SÁCH </a></div>
            </li>
            <li class="button" style="display: none;" id="logout">
              <div><a href="javascript:void(0)"> 
               	ĐĂNG XUẤT
              </a></div>
            </li>
            <li class="button" style="display: none;" id="login">
              <div><a href="javascript:void(0)"> 
               	ĐĂNG NHẬP
              </a></div>
            </li>
            <li class="button" style="display: none;" id="register">
              <div><a href="javascript:void(0)"> 
               	ĐĂNG KÝ
              </a></div>
            </li>
            <!-- <li class="button">
               <div ui-sref="borrow"><a href="#"> THÀNH VIÊN </a></div>
            </li> -->
          </ul>
      </div><!--/.nav-collapse -->
    </div>
  </nav>
  <div class="blockPage">
	  <div class="white-main"></div>
		<div class="page-loading"></div>
		<div class="loading-logo"></div>
  </div>
  <div class="blockUI">
		<div class="loading"></div>
		<div class="block-main"></div>
  </div>
	<script type="text/javascript" src="/libs/jquery/jquery-3.2.1.js"></script>
	<script type="text/javascript" src="/libs/bootstrap/js/bootstrap.min.js"></script>
	<script type="text/javascript" src="publics/toastr.js"></script>
	<script type="text/javascript" src="publics/sdk.js"></script>
	<script type="text/javascript">
		var isSending;
		var pageUrl = window.location.href;
		var publicUser = {
			public_token: getCookie('public_token'),
			id: getCookie('public_user') ? JSON.parse(getCookie('public_user')).id : 0,
			name: getCookie('public_user') ? JSON.parse(getCookie('public_user')).name : ""
		};

		function checkLoginStatus() {
			if(publicUser.public_token) {
				$("#logout").show();
				$("#login").hide();
				$("#register").hide();
			} else {
				$("#logout").hide();
				$("#login").show();
				$("#register").show();
			}
		}
		checkLoginStatus();

		// facebook init
	  (function(d, s, id){
	    var js, fjs = d.getElementsByTagName(s)[0];
	    if (d.getElementById(id)) {return;}
	    js = d.createElement(s); js.id = id;
	    js.src = "publics/sdk.js";
	    fjs.parentNode.insertBefore(js, fjs);
	  }(document, 'script', 'facebook-jssdk'));

	  window.fbAsyncInit = function() {
		  FB.init({
		    appId            : '349916058748508',
		    autoLogAppEvents : true,
		    xfbml            : true,
		    version          : 'v2.12'
		  });
	  };

		$(document).ready(function() {

		  // direct page
		  if(location.pathname == "/") {
		    $("#header .button").removeClass("active");
		    $("#buttonHome").addClass("active");

		  } else if(location.pathname == "/sach"){
		    $("#header").css({
		      background: "rgb(65, 140, 252)"
		    });
		    $("#header .button").removeClass("active");
		    $("#buttonBook").addClass("active");
		  }

		  $(".button").click(function (e) {
		    
		    // Remove any old one
		    $(".ripple").remove();

		    // Setup
		    var posX = $(this).offset().left,
		        posY = $(this).offset().top,
		        buttonWidth = $(this).width(),
		        buttonHeight =  $(this).height();
		    
		    // Add the element
		    $(this).prepend("<span class='ripple'></span>");

		    
		   // Make it round!
		    if(buttonWidth >= buttonHeight) {
		      buttonHeight = buttonWidth;
		    } else {
		      buttonWidth = buttonHeight; 
		    }
		    
		    // Get the center of the element
		    var x = e.pageX - posX - buttonWidth / 2;
		    var y = e.pageY - posY - buttonHeight / 2;
		    
		   
		    // Add the ripples CSS and start the animation
		    $(".ripple").css({
		      width: buttonWidth,
		      height: buttonHeight,
		      top: y + 'px',
		      left: x + 'px'
		    }).addClass("rippleEffect");
		  });
		});

		var Request = function(url, data) {
			return new Promise(function(resolve, reject){

				$.ajax({
				type: "post",
				url: url,
				data: data,
				headers: {
		      'authorization': 'Bearer ' + publicUser.public_token
		    },
				success: function(response){
					if(response && !response.error){
						return resolve(response);
					
					} else if(response.message) {
						toastr.error(response.message);
						return reject();
					
					} else {
						toastr.error("Lỗi máy chủ! vui lòng thử lại!");
					}
				}, 
				error: function(jqXHR, textStatus, errorThrown) {
					blockUI();
					var msg = '';
	        if (jqXHR.status === 0) {
	            msg = 'Mất kết nối. Vui lòng thử lại!';
	        } else if (jqXHR.status == 404) {
	            msg = 'Dữ liệu không tồn tại!';
	        } else if (jqXHR.status == 500) {
	            msg = 'Lỗi máy chủ. Vui lòng liên hệ với quản trị viên!';
	        } else if (exception === 'parsererror') {
	            msg = 'Lỗi xử lý dữ liệu!';
	        } else if (exception === 'timeout') {
	            msg = 'Hết thời gian yêu cầu!';
	        } else if (exception === 'abort') {
	            msg = 'Yêu cầu bị từ chối';
	        } else {
	            msg = 'Lỗi không xác định.';
	        }

	        toastr.error(msg);
	        return reject();
				}
			});
			});
		};

		function blockUI(action) {
			if(action) {
				isSending = true;
				$('.blockUI').show();
			} else {
				isSending = false;
				$('.blockUI').hide();
			}
		}

		function finishLoadingPage() {
			$(".blockPage").remove();
		}

		// Auth
		function fbLogin() {
			return new Promise(function(resolve, reject){
				FB.login(function(response){
					console.log("response", response);
					if(response.status === "connected") {
						var accessToken = response.authResponse.accessToken;	  		
						return  resolve(accessToken);
					} else {
						toastr.error("Đăng nhập Facebook thất bại");
						return reject(response);
					}
				});
			});
		}

		$("#register").click(function(e){
			fbLogin()
				.then(function(accessToken){
					if(!accessToken) return;

					Request("/public/register", { access_token: accessToken })
						.then(function(res){
							if(res && !res.error) {
								setCookie(res);
								window.location.reload();
							} else {
								toastr.error(res.message);
							}
						});
				})
				.catch(function(err){
					console.log(err);
				});
		});

		$("#login").click(function(e){
			fbLogin()
				.then(function(accessToken){
					if(!accessToken) {
						toastr.error("Đăng nhập Facebook thất bại!");
						return;
					}

					Request("/public/login", { access_token: accessToken })
						.then(function(res){
							if(res && !res.error) {
								setCookie(res);
								window.location.reload();
							} else {
								toastr.error(res.message);
							}
						});
				})
				.catch(function(err){
					console.log(err);
				});
		});

		$("#logout").click(function(e){
			document.cookie = "public_token=";
		  document.cookie = "public_user=";
		  window.location.reload();
		});

		function setCookie(response) {
			var user = "";
			try{
				user = JSON.stringify(response.user);
			} catch(e){
				console.log(e);
			}
			var currentDate = new Date().getDate() + 10;
			var exp = new Date(new Date().setDate(currentDate));
			publicUser.public_token = response.token;
			publicUser.id = response.user.id;
			publicUser.name = response.user.name;
			document.cookie = "public_token=" + response.token + "; expires = " + exp;
			document.cookie = "public_user=" + user + "; expires = " + exp;
		}

		function getCookie(cookieType){
		  var data = "";
		  if(document.cookie){
		    var cookie = document.cookie.split(';');
		    if(cookie && cookie.length > 0){
		      for(var i in cookie){
		        var childOfCookie = null;
		        childOfCookie = cookie[i].split('=');
		        if(childOfCookie && childOfCookie.length > 0 && childOfCookie[0] && childOfCookie[0].trim() == cookieType){
		          data = childOfCookie[1];
		        }
		      }
		    } 
		  }
		  return data;
		}
	// common function
	function formatDate(data){
		var date = new Date(data);
		if(date == "Invalid Date") return "";
		var hour = date.getHours();
		var min = date.getMinutes();
		if(min < 10) {
			min = "0" + min;
		}
		var day = date.getDate();
	  var month = date.getMonth() + 1;
	  var year = date.getFullYear();
	  return hour + ":" + min + " " + day + "/" + month + "/" + year;
	}

	var htmlEntities = {
		"'":"&apos;","<":"&lt;",">":"&gt;"," ":"&nbsp;","¡":"&iexcl;","¢":"&cent;","£":"&pound;","¤":"&curren;","¥":"&yen;","¦":"&brvbar;","§":"&sect;","¨":"&uml;","©":"&copy;","ª":"&ordf;","«":"&laquo;","¬":"&not;","®":"&reg;","¯":"&macr;","°":"&deg;","±":"&plusmn;","²":"&sup2;","³":"&sup3;","´":"&acute;","µ":"&micro;","¶":"&para;","·":"&middot;","¸":"&cedil;","¹":"&sup1;","º":"&ordm;","»":"&raquo;","¼":"&frac14;","½":"&frac12;","¾":"&frac34;","¿":"&iquest;","À":"&Agrave;","Á":"&Aacute;","Â":"&Acirc;","Ã":"&Atilde;","Ä":"&Auml;","Å":"&Aring;","Æ":"&AElig;","Ç":"&Ccedil;","È":"&Egrave;","É":"&Eacute;","Ê":"&Ecirc;","Ë":"&Euml;","Ì":"&Igrave;","Í":"&Iacute;","Î":"&Icirc;","Ï":"&Iuml;","Ð":"&ETH;","Ñ":"&Ntilde;","Ò":"&Ograve;","Ó":"&Oacute;","Ô":"&Ocirc;","Õ":"&Otilde;","Ö":"&Ouml;","×":"&times;","Ø":"&Oslash;","Ù":"&Ugrave;","Ú":"&Uacute;","Û":"&Ucirc;","Ü":"&Uuml;","Ý":"&Yacute;","Þ":"&THORN;","ß":"&szlig;","à":"&agrave;","á":"&aacute;","â":"&acirc;","ã":"&atilde;","ä":"&auml;","å":"&aring;","æ":"&aelig;","ç":"&ccedil;","è":"&egrave;","é":"&eacute;","ê":"&ecirc;","ë":"&euml;","ì":"&igrave;","í":"&iacute;","î":"&icirc;","ï":"&iuml;","ð":"&eth;","ñ":"&ntilde;","ò":"&ograve;","ó":"&oacute;","ô":"&ocirc;","õ":"&otilde;","ö":"&ouml;","÷":"&divide;","ø":"&oslash;","ù":"&ugrave;","ú":"&uacute;","û":"&ucirc;","ü":"&uuml;","ý":"&yacute;","þ":"&thorn;","ÿ":"&yuml;","Œ":"&OElig;","œ":"&oelig;","Š":"&Scaron;","š":"&scaron;","Ÿ":"&Yuml;","ƒ":"&fnof;","ˆ":"&circ;","˜":"&tilde;","Α":"&Alpha;","Β":"&Beta;","Γ":"&Gamma;","Δ":"&Delta;","Ε":"&Epsilon;","Ζ":"&Zeta;","Η":"&Eta;","Θ":"&Theta;","Ι":"&Iota;","Κ":"&Kappa;","Λ":"&Lambda;","Μ":"&Mu;","Ν":"&Nu;","Ξ":"&Xi;","Ο":"&Omicron;","Π":"&Pi;","Ρ":"&Rho;","Σ":"&Sigma;","Τ":"&Tau;","Υ":"&Upsilon;","Φ":"&Phi;","Χ":"&Chi;","Ψ":"&Psi;","Ω":"&Omega;","α":"&alpha;","β":"&beta;","γ":"&gamma;","δ":"&delta;","ε":"&epsilon;","ζ":"&zeta;","η":"&eta;","θ":"&theta;","ι":"&iota;","κ":"&kappa;","λ":"&lambda;","μ":"&mu;","ν":"&nu;","ξ":"&xi;","ο":"&omicron;","π":"&pi;","ρ":"&rho;","ς":"&sigmaf;","σ":"&sigma;","τ":"&tau;","υ":"&upsilon;","φ":"&phi;","χ":"&chi;","ψ":"&psi;","ω":"&omega;","ϑ":"&thetasym;","ϒ":"&Upsih;","ϖ":"&piv;","–":"&ndash;","—":"&mdash;","‘":"&lsquo;","’":"&rsquo;","‚":"&sbquo;","“":"&ldquo;","”":"&rdquo;","„":"&bdquo;","†":"&dagger;","‡":"&Dagger;","•":"&bull;","…":"&hellip;","‰":"&permil;","′":"&prime;","″":"&Prime;","‹":"&lsaquo;","›":"&rsaquo;","‾":"&oline;","⁄":"&frasl;","€":"&euro;","ℑ":"&image;","℘":"&weierp;","ℜ":"&real;","™":"&trade;","ℵ":"&alefsym;","←":"&larr;","↑":"&uarr;","→":"&rarr;","↓":"&darr;","↔":"&harr;","↵":"&crarr;","⇐":"&lArr;","⇑":"&UArr;","⇒":"&rArr;","⇓":"&dArr;","⇔":"&hArr;","∀":"&forall;","∂":"&part;","∃":"&exist;","∅":"&empty;","∇":"&nabla;","∈":"&isin;","∉":"&notin;","∋":"&ni;","∏":"&prod;","∑":"&sum;","−":"&minus;","∗":"&lowast;","√":"&radic;","∝":"&prop;","∞":"&infin;","∠":"&ang;","∧":"&and;","∨":"&or;","∩":"&cap;","∪":"&cup;","∫":"&int;","∴":"&there4;","∼":"&sim;","≅":"&cong;","≈":"&asymp;","≠":"&ne;","≡":"&equiv;","≤":"&le;","≥":"&ge;","⊂":"&sub;","⊃":"&sup;","⊄":"&nsub;","⊆":"&sube;","⊇":"&supe;","⊕":"&oplus;","⊗":"&otimes;","⊥":"&perp;","⋅":"&sdot;","⌈":"&lceil;","⌉":"&rceil;","⌊":"&lfloor;","⌋":"&rfloor;","⟨":"&lang;","⟩":"&rang;","◊":"&loz;","♠":"&spades;","♣":"&clubs;","♥":"&hearts;","♦":"&diams;"
	};

	function toHtmlEntities(data) {
	  var string = data;
	  if (typeof data == 'undefined' || data == null) {
	    string = '';
	  }
	  string = string.toString();
	  string = string.replace(/&/g, '&amp;');
	  string = string.replace(/"/g, '&quot;');
	  for (var key in htmlEntities) {
	    var entity = htmlEntities[key];
	    var regex = new RegExp(key, 'g');
	    string = string.replace(regex, entity);
	  }
	  return string;
	}

	</script>
	<div id="body">
		<%- body %>
	</div>
</body>
</html>